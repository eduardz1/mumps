@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)

set(MUMPS_UPSTREAM_VERSION @MUMPS_UPSTREAM_VERSION@)
set(MUMPS_ACTUAL_VERSION @MUMPS_ACTUAL_VERSION@)

set(MUMPS_intsize64 @MUMPS_intsize64@)
set(MUMPS_parallel @MUMPS_parallel@)
set(MUMPS_LAPACK_VENDOR @LAPACK_VENDOR@)
set(MUMPS_SCALAPACK_VENDOR @SCALAPACK_VENDOR@)
set(MUMPS_SCALAPACK_FOUND @SCALAPACK_FOUND@)

set(MUMPS_s_FOUND @BUILD_SINGLE@)
set(MUMPS_d_FOUND @BUILD_DOUBLE@)
set(MUMPS_c_FOUND @BUILD_COMPLEX@)
set(MUMPS_z_FOUND @BUILD_COMPLEX16@)

if(MUMPS_parallel)
  find_dependency(MPI COMPONENTS C Fortran)

  if(NOT MUMPS_LAPACK_VENDOR MATCHES "^MKL")
    find_dependency(LAPACK COMPONENTS ${MUMPS_LAPACK_VENDOR})
  endif()

  if(DEFINED MUMPS_SCALAPACK_VENDOR)
    find_dependency(SCALAPACK COMPONENTS ${MUMPS_SCALAPACK_VENDOR})
  elseif(MUMPS_SCALAPACK_FOUND)
    find_dependency(SCALAPACK)
  else()
    find_dependency(SCALAPACK CONFIG)
  endif()
else()
  find_dependency(LAPACK COMPONENTS ${MUMPS_LAPACK_VENDOR})

  # This is used in place of find_dependency(MPI) in MUMPS when MUMPS_parallel is OFF
  add_library(MPI::MPI_C INTERFACE IMPORTED)
  target_link_libraries(MPI::MPI_C INTERFACE MUMPS::mpiseq_c)

  add_library(MPI::MPI_Fortran INTERFACE IMPORTED)
  target_link_libraries(MPI::MPI_Fortran INTERFACE MUMPS::mpiseq_fortran)

  set(MUMPS_mpiseq_FOUND true)
endif()

set(MUMPS_Scotch_FOUND @MUMPS_scotch@)
if(MUMPS_Scotch_FOUND)
  find_dependency(SCOTCH CONFIG)
  target_link_libraries(SCOTCH::scotch INTERFACE SCOTCH::scotcherr SCOTCH::esmumps)
endif()

set(MUMPS_METIS_FOUND @MUMPS_metis@)
if(MUMPS_METIS_FOUND)
  find_dependency(metis CONFIG)
endif()

set(MUMPS_PARMETIS_FOUND @MUMPS_parmetis@)
if(MUMPS_PARMETIS_FOUND)
  find_dependency(parmetis CONFIG)
endif()

set(MUMPS_OpenMP_FOUND @MUMPS_openmp@)
if(MUMPS_OpenMP_FOUND)
  find_dependency(OpenMP COMPONENTS C Fortran)
endif()

check_required_components(@PROJECT_NAME@)
